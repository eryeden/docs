"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[477],{30010:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"memo","metadata":{"permalink":"/blog/memo","editUrl":"https://github.com/eryeden/docs/tree/main/blog/2022-09-13-first-run.md","source":"@site/blog/2022-09-13-first-run.md","title":"New Portfolio optimization first simulation run","description":"\u3081\u3063\u3061\u3083\u640d\u3057\u3066\u308b\u3002","date":"2022-09-13T00:00:00.000Z","formattedDate":"September 13, 2022","tags":[{"label":"memo","permalink":"/blog/tags/memo"},{"label":"python","permalink":"/blog/tags/python"},{"label":"rclpy","permalink":"/blog/tags/rclpy"}],"readingTime":0.045,"hasTruncateMarker":false,"authors":[{"name":"kk","title":"doe","url":"https://google.com","key":"eryeden"}],"frontMatter":{"slug":"memo","title":"New Portfolio optimization first simulation run","authors":["eryeden"],"tags":["memo","python","rclpy"]},"nextItem":{"title":"pandas DataFrame\u3092List\u306b","permalink":"/blog/memo"}},"content":"\u3081\u3063\u3061\u3083\u640d\u3057\u3066\u308b\u3002\\n[Imgur](https://i.imgur.com/Gqi8uS6.png)"},{"id":"memo","metadata":{"permalink":"/blog/memo","editUrl":"https://github.com/eryeden/docs/tree/main/blog/2022-09-03-to-list.md","source":"@site/blog/2022-09-03-to-list.md","title":"pandas DataFrame\u3092List\u306b","description":"\u898b\u308b\u3079\u3057\u2193","date":"2022-09-03T00:00:00.000Z","formattedDate":"September 3, 2022","tags":[{"label":"memo","permalink":"/blog/tags/memo"},{"label":"python","permalink":"/blog/tags/python"}],"readingTime":0.055,"hasTruncateMarker":false,"authors":[{"name":"kk","title":"doe","url":"https://google.com","key":"eryeden"}],"frontMatter":{"slug":"memo","title":"pandas DataFrame\u3092List\u306b","authors":["eryeden"],"tags":["memo","python"]},"prevItem":{"title":"New Portfolio optimization first simulation run","permalink":"/blog/memo"},"nextItem":{"title":"ROS2 Callback\u5185\u3067Service\u3092\u547c\u3076","permalink":"/blog/memo"}},"content":"\u898b\u308b\u3079\u3057\u2193\\nhttps://www.statology.org/pandas-index-to-list/\\n\\n```python\\nindex_list = df.index.values.tolist()\\n```"},{"id":"memo","metadata":{"permalink":"/blog/memo","editUrl":"https://github.com/eryeden/docs/tree/main/blog/2022-08-31-call-service-in-callback.md","source":"@site/blog/2022-08-31-call-service-in-callback.md","title":"ROS2 Callback\u5185\u3067Service\u3092\u547c\u3076","description":"ROS2\u3067\u306fTopic\u306eSubscribe\u6642\u306b\u547c\u3070\u308c\u308bCallback\u3084Timer\u306eCallback\u3092\u4ed5\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3002","date":"2022-08-31T00:00:00.000Z","formattedDate":"August 31, 2022","tags":[{"label":"memo","permalink":"/blog/tags/memo"},{"label":"python","permalink":"/blog/tags/python"},{"label":"rclpy","permalink":"/blog/tags/rclpy"}],"readingTime":1.31,"hasTruncateMarker":false,"authors":[{"name":"kk","title":"doe","url":"https://google.com","key":"eryeden"}],"frontMatter":{"slug":"memo","title":"ROS2 Callback\u5185\u3067Service\u3092\u547c\u3076","authors":["eryeden"],"tags":["memo","python","rclpy"]},"prevItem":{"title":"pandas DataFrame\u3092List\u306b","permalink":"/blog/memo"}},"content":"ROS2\u3067\u306fTopic\u306eSubscribe\u6642\u306b\u547c\u3070\u308c\u308bCallback\u3084Timer\u306eCallback\u3092\u4ed5\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3002\\nCallback\u95a2\u6570\u5185\u3067ROS2\u306eService\u3092\u547c\u3076\u3068\u30c7\u30c3\u30c9\u30ed\u30c3\u30af\u3059\u308b\u5834\u5408\u304c\u3042\u308b\u3002\\n[\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://docs.ros2.org/foxy/api/rclpy/api/services.html#rclpy.client.Client.call)\u306b\u3082Warning\u3067\u30c7\u30c3\u30c9\u30ed\u30c3\u30af\u306e\u65e8\u304c\u66f8\u3044\u3066\u3042\u308b\u3002\u3058\u3083\u3042\u3069\u3046\u3059\u308c\u3070\u3044\u3044\u306e\uff1f\u305f\u3060\u3001\u30b5\u30fc\u30d3\u30b9\u547c\u3093\u3067\u7d50\u679c\u3092\u53d7\u3051\u53d6\u308b\u7a0b\u5ea6\u306e\u3053\u3068\u3082\u3067\u304d\u306a\u3044\u306e\uff01\uff1f\u3068\u601d\u3063\u3066\u3057\u307e\u3046\u3002\\n\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3067\u56de\u907f\u304c\u53ef\u80fd\u3002\\n\\n\u30dd\u30a4\u30f3\u30c8\u306f`MutuallyExclusiveCallbackGroup`\u3002Node\u5185\u306eServiceClient\u3068TimerCallback\u3092\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u51e6\u7406\u3059\u308b\u3053\u3068\u3092\u660e\u793a\u3057\u3066\u3044\u308b\u3002\\n\u3053\u306e\u5834\u5408\u3001`MultiThreadedExecutor`\u3067Node\u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u6ce8\u610f\u3002\\nServiceClient\u3068Callback\u304c\u540c\u4e00\u30b9\u30ec\u30c3\u30c9\u3067\u8d70\u308b\u3068\u30c7\u30c3\u30c9\u30ed\u30c3\u30af\u3059\u308b\u306e\u3060\u308d\u3046\u3002\\n\\n```python\\nimport rclpy\\nfrom rclpy.node import Node\\nfrom rclpy.timer import Timer\\n\\nfrom rclpy.callback_groups import MutuallyExclusiveCallbackGroup\\nfrom rclpy.executors import MultiThreadedExecutor\\n\\nclass TestNode(Node):\\n\\n    def __init__(self):\\n        super().__init__(\'test_node\')\\n\\n        # Service\\n        self.test_service = self.create_client(srv.Test, \'test_service\', callback_group=MutuallyExclusiveCallbackGroup()) # <= \u3053\u3053\\n\\n        # timer\\n        self.t_callback = self.create_timer(1, self.timer_cb, callback_group=MutuallyExclusiveCallbackGroup()) # <= \u3053\u3053\\n\\n    # Timer callback\\n    def timer_cb(self):\\n        self.get_logger().info(\\"Timer cb\\")\\n\\n        # Call service\\n        test_request = srv.Test.Request()\\n        test_response: srv.Test.Response = self.test_service.call(test_request)\\n\\n\\ndef main():\\n    rclpy.init()\\n\\n    test_node = TestNode()\\n\\n    executor = MultiThreadedExecutor()  # <= \u3053\u3053\\n    executor.add_node(test_node)\\n\\n    executor.spin()\\n\\n    test_node.destroy_node()\\n    rclpy.shutdown()\\n\\n\\nif __name__ == \'__main__\':\\n    main()\\n```"}]}')}}]);