"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[181],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=r.createContext({}),i=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=i(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,p=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=i(n),m=l,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,o(o({ref:t},s),{},{components:n})):r.createElement(f,o({ref:t},s))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,o=new Array(a);o[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:l,o[1]=c;for(var i=2;i<a;i++)o[i]=n[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},63830:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>i});var r=n(87462),l=(n(67294),n(3905));const a={},o="Logging activities of crypto-currency (Deprecated)",c={unversionedId:"Pishon4/Influxdb",id:"Pishon4/Influxdb",title:"Logging activities of crypto-currency (Deprecated)",description:"Influxdb:2.0",source:"@site/docs/Pishon4/Influxdb.md",sourceDirName:"Pishon4",slug:"/Pishon4/Influxdb",permalink:"/docs/Pishon4/Influxdb",draft:!1,editUrl:"https://github.com/eryeden/docs/tree/main/docs/Pishon4/Influxdb.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Welcome to Pishon4",permalink:"/docs/Pishon4/"},next:{title:"Data acquisition for backtesting",permalink:"/docs/Pishon4/data_acquisition"}},p={},i=[{value:"Influxdb:2.0",id:"influxdb20",level:2},{value:"Setup",id:"setup",level:3},{value:"Telegraf",id:"telegraf",level:2},{value:"Crypt-currency logger",id:"crypt-currency-logger",level:2},{value:"Dump logged data from remote-db",id:"dump-logged-data-from-remote-db",level:3}],s={toc:i};function u(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"logging-activities-of-crypto-currency-deprecated"},"Logging activities of crypto-currency (Deprecated)"),(0,l.kt)("h2",{id:"influxdb20"},"Influxdb:2.0"),(0,l.kt)("p",null,"Follow ",(0,l.kt)("a",{parentName:"p",href:"https://docs.influxdata.com/influxdb/v2.0/get-started/"},"here"),"."),(0,l.kt)("h3",{id:"setup"},"Setup"),(0,l.kt)("p",null,"Set up the TLS certification files by  Let&'s encrypt: Follow ",(0,l.kt)("a",{parentName:"p",href:"https://certbot.eff.org/lets-encrypt/ubuntubionic-webproduct"},"https://certbot.eff.org/lets-encrypt/ubuntubionic-webproduct")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo snap install core; sudo snap refresh core\nsudo snap install --classic certbot\nsudo ln -s /snap/bin/certbot /usr/bin/certbot\nsudo certbot certonly --standalone\nsudo certbot renew --dry-run\n")),(0,l.kt)("p",null,"Files for certification are created."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The tls-cert file: /etc/letsencrypt/live/\\<domain name",">","/fullchain.pem"),(0,l.kt)("li",{parentName:"ul"},"Private key: /etc/letsencrypt/live/\\<domain name",">","/privkey.pem")),(0,l.kt)("p",null,"Fix permission:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo chmod +x /etc/letsencrypt/live\nsudo chmod +x /etc/letsencrypt/archive\nsudo chmod 644 /etc/letsencrypt/live/<domain name>/fullchain.pem\nsudo chmod 644 /etc/letsencrypt/live/<domain name>/privkey.pem\n")),(0,l.kt)("p",null,"Create config files:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cd collector\ncp influxdb_config_template.yml config.yml\n")),(0,l.kt)("p",null,"Edit config.yml as follows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"# Example, please refer https://docs.influxdata.com/influxdb/v2.0/reference/config-options/\nstorage-cache-max-memory-size: 700000000  # A limit of memory usage in byte.\ntls-cert: /etc/letsencrypt/live/ee-collector.tk/fullchain.pem\ntls-key: /etc/letsencrypt/live/ee-collector.tk/privkey.pem\n")),(0,l.kt)("p",null,"Run influxdb with TLS:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cd collector\nbash ./launch_influxdb.sh\n")),(0,l.kt)("p",null,"Set up influxdb by CLI:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"influx setup\n")),(0,l.kt)("h2",{id:"telegraf"},"Telegraf"),(0,l.kt)("p",null,"Follow ",(0,l.kt)("a",{parentName:"p",href:"https://docs.influxdata.com/telegraf/v1.17/introduction/installation/"},"here"),"."),(0,l.kt)("p",null,"Then, start the telegraf:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl start telegraf\n")),(0,l.kt)("p",null,"Start the system monitoring plugin with Telegraf:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"bash collector/launch_system_monitor_telegraf.sh &\n")),(0,l.kt)("h2",{id:"crypt-currency-logger"},"Crypt-currency logger"),(0,l.kt)("p",null,"Launch logger:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"poetry shell\ncd collector\nnohup bash ./launch_collector.sh &\n")),(0,l.kt)("p",null,"With Doppler:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"poetry shell\ncd collector\ndoppler login\ndoppler setup\ndoppler run --command 'bash ./launch_collector.sh'\n")),(0,l.kt)("h3",{id:"dump-logged-data-from-remote-db"},"Dump logged data from remote-db"),(0,l.kt)("p",null,"With Doppler:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"doppler run --command 'bash ./collector/dump_all.sh /path/to/dump/'\n")),(0,l.kt)("p",null,"Save klines to dataset manner."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"doppler run --command 'bash ./dump_to_dataset.sh /path/to/save/dir 2021-02-22T15:00:00Z 2021-02-25T10:00:00Z'\n")))}u.isMDXComponent=!0}}]);